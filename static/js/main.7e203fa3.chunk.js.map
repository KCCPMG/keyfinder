{"version":3,"sources":["logo.svg","scripts/MusicCalc.js","components/SelectNotes.js","components/SelectChord.js","components/SelectKey.js","App.js","reportWebVitals.js","index.js"],"names":["NOTES","NATURAL","SHARP","FLAT","KEYS","arr","elAt","index","newIndex","length","getArr","this","MAJOR","name","progression","MINOR","BLUES","CHORDS","FIFTH","AUG","AUG_MAJ_SEVENTH","AUG_MIN_SEVENTH","DIM","DIM_SEVENTH","MINOR_SEVENTH_FLAT_FIVE","ADD_TWO","SUS_FOUR","SUS_FOUR_ADD_SIX","SUS_FOUR_MIN_SIX","ADD_FOUR","MINOR_ADD_FOUR","SIX","SEVEN","MAJOR_SEVEN","MINOR_SEVEN","SIX_SLASH_NINE","FLAT_NINTH","MINOR_FLAT_NINTH","generateKeyInIntervals","rootNoteStr","key","rootIndex","findIndex","n","map","num","noteToString","note","versions","push","join","compatibleKeysWithNotes","notes","keys","noteIntervals","JSON","stringify","noteInIntervals","root","rootStr","split","keyInterval","every","ni","includes","Object","getNoteIndex","noteObj","stringifiedNoteObj","getKeyIntervals","keyObj","i","getChordIntervals","chordObj","chordIntervalInKeyInterval","chordIntArr","keyIntArr","cia","SelectNotes","props","selectedNoteStrings","selectedNotes","sn","renderedNotes","selected","noteStr","cName","Col","xs","sm","md","className","onClick","deselectNote","selectNote","displayedNotes","noteStringEls","displayedKeys","availableKeys","ak","displayedChords","availableChords","ch_key","ch","Container","Row","React","Component","SelectChord","selectedChordRoot","clearChordRoot","selectChordRoot","renderedChords","selectedChord","chordStr","console","log","clearChord","selectChord","chordNotes","ci","cn","chordInterval","key_in","k","style","paddingTop","SelectKey","selectedKeyRoot","deselectKeyRoot","selectKeyRoot","renderedKeys","selectedKey","keyStr","deselectKey","selectKey","keyIntervals","noteStrs","ki","forEach","chordIntervals","SELECT_NOTES","SELECT_CHORD","SELECT_KEY","App","keyRoot","setState","chord","parse","state","selectedNotesStrings","noteString","filter","sns","selected_component","paddingBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAAe,I,0CCoBFA,EAAQ,CACnB,CACEC,QAAS,KAEX,CACEC,MAAO,UACPC,KAAM,WAER,CACEF,QAAS,IACTE,KAAM,WAER,CACED,MAAO,UACPD,QAAS,KAEX,CACEC,MAAO,UACPC,KAAM,WAER,CACEF,QAAS,KAEX,CACEC,MAAO,UACPC,KAAM,WAER,CACEF,QAAS,IACTE,KAAM,WAER,CACED,MAAO,UACPD,QAAS,KAEX,CACEC,MAAO,UACPC,KAAM,WAER,CACEF,QAAS,KAEX,CACEC,MAAO,UACPC,KAAM,YAUGC,GANc,IAnEzB,WAAYC,GAAM,IAAD,gCAIjBC,KAAO,SAACC,GACN,IAAIC,EAMJ,OAJEA,EADED,EAAQ,GACGA,EAAQ,EAAKF,IAAII,OACrBF,GAAO,EAAKF,IAAII,OACdF,EAAO,EAAKF,IAAII,OACXF,EACX,EAAKF,IAAIG,IAXD,KAcjBE,OAAS,WACP,OAAO,EAAKL,KAdZM,KAAKN,IAAMA,EAkEY,CAAaL,GAMpB,CAClBY,MAAQ,CACNC,KAAM,QACNC,YAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAE5BC,MAAQ,CACNF,KAAM,QACNC,YAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAE5BE,MAAQ,CACNH,KAAM,QACNC,YAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,OAIfG,EAAS,CACpBC,MAAQ,CACNL,KAAM,IACNC,YAAa,CAAC,EAAG,IAGnBF,MAAQ,CACNC,KAAM,MACNC,YAAa,CAAC,EAAG,EAAG,IAGtBC,MAAQ,CACNF,KAAM,MACNC,YAAa,CAAC,EAAG,EAAG,IAGtBK,IAAM,CACJN,KAAM,MACNC,YAAa,CAAC,EAAG,EAAG,IAGtBM,gBAAkB,CAChBP,KAAM,WACNC,YAAa,CAAC,EAAG,EAAG,EAAG,KAGzBO,gBAAkB,CAChBR,KAAM,SACNC,YAAa,CAAC,EAAG,EAAG,EAAG,KAGzBQ,IAAM,CACJT,KAAM,MACNC,YAAa,CAAC,EAAE,EAAE,IAGpBS,YAAc,CACZV,KAAM,OACNC,YAAa,CAAC,EAAE,EAAE,EAAE,IAGtBU,wBAA0B,CACxBX,KAAM,YACNC,YAAa,CAAC,EAAE,EAAE,EAAE,KAGtBW,QAAU,CACRZ,KAAM,OACNC,YAAa,CAAC,EAAE,EAAE,EAAE,KAGtBY,SAAW,CACTb,KAAM,OACNC,YAAa,CAAC,EAAE,EAAE,IAGpBa,iBAAmB,CACjBd,KAAM,WACNC,YAAa,CAAC,EAAE,EAAE,EAAE,IAGtBc,iBAAmB,CACjBf,KAAM,SACNC,YAAa,CAAC,EAAE,EAAE,IAGpBe,SAAW,CACThB,KAAM,OACNC,YAAa,CAAC,EAAE,EAAE,EAAE,KAGtBgB,eAAiB,CACfjB,KAAM,QACNC,YAAa,CAAC,EAAE,EAAE,EAAE,KAGtBiB,IAAM,CACJlB,KAAM,IACNC,YAAa,CAAC,EAAE,EAAE,EAAE,IAGtBkB,MAAQ,CACNnB,KAAM,IACNC,YAAa,CAAC,EAAE,EAAE,EAAE,KAGtBmB,YAAc,CACZpB,KAAM,OACNC,YAAa,CAAC,EAAE,EAAE,EAAE,KAGtBoB,YAAc,CACZrB,KAAM,KACNC,YAAa,CAAC,EAAE,EAAE,EAAE,KAGtBqB,eAAiB,CACftB,KAAM,MACNC,YAAa,CAAC,EAAE,EAAE,EAAE,EAAE,KAGxBsB,WAAa,CACXvB,KAAM,UACNC,YAAa,CAAC,EAAE,EAAE,EAAE,KAGtBuB,iBAAmB,CACjBxB,KAAM,WACNC,YAAa,CAAC,EAAE,EAAE,EAAE,MAmCXwB,EAAyB,SAACC,EAAaC,GAClD,IAAIC,EAAYzC,EAAM0C,WAAU,SAAAC,GAAC,OAAKA,EAAExC,OAASoC,GAAeI,EAAE1C,UAAWsC,GAAeI,EAAEzC,QAAUqC,KAExG,OAAOC,EAAI1B,YAAY8B,KAAI,SAAAC,GAAG,OAAMA,EAAIJ,GAAa,OAuC1CK,EAAe,SAACC,GAC3B,IAAIC,EAAW,GAIf,OAHID,EAAK7C,OAAO8C,EAASC,KAAKF,EAAK7C,OAC/B6C,EAAK9C,SAAS+C,EAASC,KAAKF,EAAK9C,SACjC8C,EAAK5C,MAAM6C,EAASC,KAAKF,EAAK5C,MAC3B6C,EAASE,KAAK,MAIVC,EAA0B,SAACC,GACtC,IADgD,EAC5CC,EAAO,GAEPC,EAAgBF,EAAMR,KAAI,SAAAG,GAAI,OAlBL,SAACA,GAE9B,OADkB/C,EAAM4C,KAAI,SAAAD,GAAC,OAAIY,KAAKC,UAAUb,MAC7BD,WAAU,SAAAC,GAAC,OAAIA,IAAIY,KAAKC,UAAUT,MAgBfU,CAAgBV,MAHN,cAK/B/C,GAL+B,IAKhD,2BACE,IADuB,IAAhB0D,EAAe,qBACjB,IAAIlB,EAAG,KAENmB,EAAUb,EAAaY,GAAME,MAAM,KAAK,GAExCC,EAAcvB,EAAuBqB,EAASvD,EAAKoC,IAEnDc,EAAcQ,OAAM,SAAAC,GAAE,OAAIF,EAAYG,SAASD,OACjDV,EAAKJ,KAAL,UAAaH,EAAaY,GAA1B,YAAmCtD,EAAKoC,GAAK3B,QAPjD,MAAgBoD,OAAOZ,KAAKjD,GAA5B,eAAoC,IANU,8BAiBhD,OAAOiD,GAaIa,EAAe,SAACC,GAC3B,IAAIC,EAAqBb,KAAKC,UAAUW,GAIxC,OAFuBnE,EAAM4C,KAAI,SAAAD,GAAC,OAAIY,KAAKC,UAAUb,MAE5BD,WAAU,SAAAC,GAAC,OAAEA,IAAIyB,MAG/BC,EAAkB,SAACF,EAASG,GACvC,IAAI7B,EAAYyB,EAAaC,GAE7B,OAAOG,EAAOxD,YAAY8B,KAAI,SAAA2B,GAC5B,OAAQA,EAAE9B,GAAa,OAId+B,EAAoB,SAACL,EAASM,GACzC,IAAIhC,EAAYyB,EAAaC,GAE7B,OAAOM,EAAS3D,YAAY8B,KAAI,SAAA2B,GAC9B,OAAQA,EAAE9B,GAAa,OAgBdiC,EAA6B,SAACC,EAAaC,GACtD,OAAOD,EAAYb,OAAM,SAAAe,GAAG,OAAID,EAAUZ,SAASa,O,OCtNtCC,E,kDAjIb,WAAYC,GAAQ,uCACZA,G,0CAGR,WAAU,IAAD,OACHC,EAAsBrE,KAAKoE,MAAME,cAAcrC,KAAI,SAAAsC,GAAE,OAAI3B,KAAKC,UAAU0B,MAExEC,EAAgBnF,EAAM4C,KAAI,SAAAG,GAG5B,IAAIqC,GAAW,EACXJ,EAAoBhB,SAAST,KAAKC,UAAUT,MAAQqC,GAAW,GAGnE,IAAIC,EAAUvC,EAAaC,GAGvBuC,EAAQ,cAGZ,OAFIF,IAAUE,GAAgB,yBAG5B,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACE,qBACEC,UAAWL,EACXM,QAAS,WACHR,EAAU,EAAKL,MAAMc,aAAa9C,GACjC,EAAKgC,MAAMe,WAAW/C,IAJ/B,SAOGsC,SAOLU,EAAiB,KACrB,GAAIpF,KAAKoE,MAAME,cAAcxE,OAAS,EAAG,CAEvC,IAAIuF,EAAgBrF,KAAKoE,MAAME,cAAcrC,KAAI,SAAAsC,GAAE,OACjD,qBAAKS,UAAU,mBAAf,SACG7C,EAAaoC,QAGlBa,EACE,sBAAKJ,UAAU,oBAAf,UACE,uCACA,qBAAKA,UAAU,6BAAf,SACGK,YAIFD,EAAiB,KAIxB,IAAIE,EAAgB,KACpB,GAAItF,KAAKoE,MAAME,cAAcxE,OAAO,EAAG,CACrC,IAAIyF,EAAgB/C,EAAwBxC,KAAKoE,MAAME,eAAerC,KAAI,SAAAuD,GACxE,OACE,qBACER,UAAU,mBADZ,SAGGQ,OAKsB,IAAzBD,EAAczF,SAAcyF,EAAc,oBAE9CD,EACE,sBAAKN,UAAU,oBAAf,UACE,gEACA,qBAAKA,UAAU,6BAAf,SACGO,YAIFD,EAAgB,KAGvB,IAAIG,EAAkB,KACtB,GAAIzF,KAAKoE,MAAME,cAAcxE,OAAO,EAAG,CACrC,IADqC,EACjC6C,EAAgB3C,KAAKoE,MAAME,cAAcrC,KAAI,SAAAD,GAAC,OAAIuB,EAAavB,MAC/D0D,EAAkB,GAFe,cAIvBrG,GAJuB,qBAKnC,IALmC,IAI5B2C,EAJ4B,qBAK9B,IAAI2D,EAAM,KACTC,EAAKtF,EAAOqF,GACZhD,EAAcQ,OAAM,SAAAC,GAAE,OAAIS,EAAkB7B,EAAG4D,GAAIvC,SAASD,OAC9DsC,EAAgBpD,KACd,qBAAK0C,UAAU,gBAAf,mBACM7C,EAAaH,GADnB,YACyB4D,EAAG1F,UALlC,MAAmBoD,OAAOZ,KAAKpC,GAA/B,eAAyC,KAD3C,2BAAsB,IAJe,8BAgBN,IAA3BoF,EAAgB5F,SAAc4F,EAAgB,sBAElDD,EACE,sBAAKT,UAAU,oBAAf,UACE,kEACA,qBAAKA,UAAU,6BAAf,SACGU,YAIFD,EAAkB,KAEzB,OACE,eAACI,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACGtB,IAEH,cAACsB,EAAA,EAAD,UACGV,IAEH,cAACU,EAAA,EAAD,UACGR,IAEH,cAACQ,EAAA,EAAD,UACGL,W,GA3HeM,IAAMC,WCFXC,E,kDACnB,WAAY7B,GAAQ,uCACZA,G,0CAGR,WAAU,IF8UkBZ,EAASM,EE9U5B,OAGHU,EAAgBnF,EAAM4C,KAAI,SAAAG,GAG5B,IAAIqC,GAAW,EACX7B,KAAKC,UAAU,EAAKuB,MAAM8B,qBAAuBtD,KAAKC,UAAUT,KAAOqC,GAAW,GAItF,IAAIC,EAAUvC,EAAaC,GAGvBuC,EAAQ,cAGZ,OAFIF,IAAUE,GAAgB,yBAG5B,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACE,qBACEC,UAAWL,EACXM,QAAS,WACHR,EAAU,EAAKL,MAAM+B,iBACpB,EAAK/B,MAAMgC,gBAAgBhE,IAJpC,SAOGsC,SASL2B,EAHW/C,OAAOZ,KAAKpC,GAAQ2B,KAAI,SAAA2D,GAAE,OAAItF,EAAOsF,MAGtB3D,KAAI,SAAA2D,GAGhC,IAAInB,GAAW,EACX7B,KAAKC,UAAU,EAAKuB,MAAMkC,iBAAmB1D,KAAKC,UAAU+C,KAAKnB,GAAW,GAGhF,IAAIE,EAAQ,cACRF,IAAUE,GAAgB,yBAG9B,IAAI4B,EAAWX,EAAG1F,KAElB,OACE,cAAC0E,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACE,qBACEC,UAAWL,EACXM,QAAS,WACHR,GACF+B,QAAQC,IAAIb,GACZ,EAAKxB,MAAMsC,eAEXF,QAAQC,IAAIb,GACZ,EAAKxB,MAAMuC,YAAYf,KAR7B,SAYGW,SAOLnB,EAAiB,KACrB,GAAKpF,KAAKoE,MAAM8B,mBAAqBlG,KAAKoE,MAAMkC,cAAe,CAC7D,IAAIM,GFuQoBpD,EEvQOxD,KAAKoE,MAAM8B,kBFuQTpC,EEvQ4B9D,KAAKoE,MAAMkC,cFwQvDzC,EAAkBL,EAASM,GAE1B7B,KAAI,SAAA4E,GAAE,OAAIxH,EAAMwH,OEzQjC5E,KAAI,SAAA6E,GAAE,OACL,qBAAK9B,UAAU,qBAAf,SACG7C,EAAa2E,QAIlB1B,EACE,sBAAKJ,UAAU,oBAAf,UACE,gDACA,qBAAKA,UAAU,6BAAf,SACG4B,YAKFxB,EAAiB,KAIxB,IAAIE,EAAgB,KACpB,GAAItF,KAAKoE,MAAM8B,mBAAqBlG,KAAKoE,MAAMkC,cAAe,CAK5D,IAHA,IAAIf,EAAgB,GAChBwB,EAAgBlD,EAAkB7D,KAAKoE,MAAM8B,kBAAmBlG,KAAKoE,MAAMkC,eAE/E,MAAmBhD,OAAOZ,KAAKjD,GAA/B,eAAsC,CAAjC,IAAiC,EAA7BuH,EAAM,KACTC,EAAIxH,EAAKuH,GADuB,cAEtB3H,GAFsB,IAEpC,2BAAqB,CAAC,IAAb2C,EAAY,QACfkB,EAAcQ,EAAgB1B,EAAGiF,GAEjClD,EAA2BgD,EAAe7D,IAC5CqC,EAAcjD,KACZ,qBAAK0C,UAAU,mBAAf,mBACM7C,EAAaH,GADnB,YACyBiF,EAAE/G,UARG,+BAeT,IAAzBqF,EAAczF,SAAcyF,EAAgB,qBAEhDD,EACE,sBAAKN,UAAU,oBAAf,UACE,uDACA,qBAAKA,UAAU,6BAAf,SACGO,YAKFD,EAAgB,KAEvB,OACE,eAACO,EAAA,EAAD,WAEE,mDACA,cAACC,EAAA,EAAD,UACGtB,IAGH,oBAAI0C,MAAO,CAACC,WAAW,QAAvB,+BACA,cAACrB,EAAA,EAAD,UACGO,IAEH,cAACP,EAAA,EAAD,UACGV,IAEH,cAACU,EAAA,EAAD,UACGR,W,GAlJ8BS,IAAMC,WCA1BoB,E,kDACnB,WAAYhD,GAAQ,uCACZA,G,0CAGR,WAAU,IAAD,OACHI,EAAgBnF,EAAM4C,KAAI,SAAAG,GAC5B,IAAIqC,GAAW,EACX7B,KAAKC,UAAU,EAAKuB,MAAMiD,mBAAoBzE,KAAKC,UAAUT,KAAOqC,GAAW,GAEnF,IAAIC,EAAUvC,EAAaC,GAEvBuC,EAAQ,cAIZ,OAFIF,IAAUE,GAAgB,yBAG5B,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACE,qBACEC,UAAWL,EACXM,QAAS,WACHR,EAAU,EAAKL,MAAMkD,kBACpB,EAAKlD,MAAMmD,cAAcnF,IAJlC,SAOGsC,SAML8C,EAAelE,OAAOZ,KAAKjD,GAAMwC,KAAI,SAAAgF,GAAC,OAAIxH,EAAKwH,MAClDhF,KAAI,SAAAgF,GACH,IAAIxC,GAAW,EACX7B,KAAKC,UAAU,EAAKuB,MAAMqD,eAAiB7E,KAAKC,UAAUoE,KAAIxC,GAAW,GAE7E,IAAIE,EAAQ,cACRF,IAAUE,GAAgB,yBAE9B,IAAI+C,EAAST,EAAE/G,KAEf,OACE,cAAC0E,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACE,qBACEC,UAAWL,EACXM,QAAS,WACHR,EACF,EAAKL,MAAMuD,cAEX,EAAKvD,MAAMwD,UAAUX,IAN3B,SAUGS,SAMLG,EAAe,GAEf7H,KAAKoE,MAAMiD,iBAAmBrH,KAAKoE,MAAMqD,cAC3CI,EAAenE,EAAgB1D,KAAKoE,MAAMiD,gBAAiBrH,KAAKoE,MAAMqD,cAKxE,IH0QwBjE,EAASG,EG1Q7ByB,EAAiB,KACrB,GAAIpF,KAAKoE,MAAMqD,aAAezH,KAAKoE,MAAMiD,gBAAiB,CAExD,IAAIS,GHuQkBtE,EGvQKxD,KAAKoE,MAAMiD,gBHuQP1D,EGvQwB3D,KAAKoE,MAAMqD,YHwQnD/D,EAAgBF,EAASG,GAExB1B,KAAI,SAAA8F,GAAE,OAAI1I,EAAM0I,OGzQ/B9F,KAAI,SAAAD,GAAC,OACJ,qBAAKgD,UAAU,mBAAf,SACG7C,EAAaH,QAIlBoD,EACE,sBAAKJ,UAAU,oBAAf,UACE,8CACA,qBAAKA,UAAU,6BAAf,SACG8C,YAKF1C,EAAiB,KAIxB,IAAIK,EAAkB,KACtB,GAAIzF,KAAKoE,MAAMiD,iBAAmBrH,KAAKoE,MAAMqD,YAAa,CACxD,IAAIpB,EAAiB,GACrBhH,EAAM2I,SAAQ,SAAAhG,GACZsB,OAAOZ,KAAKpC,GAAQ0H,SAAQ,SAAArC,GAC1B,IAAIC,EAAKtF,EAAOqF,GAEZsC,EAAiBpE,EAAkB7B,EAAG4D,GAEtC7B,EAA2BkE,EAAgBJ,IAC7CxB,EAAe/D,KACb,qBAAK0C,UAAU,mBAAf,mBACM7C,EAAaH,GADnB,YACyB4D,EAAG1F,eAON,IAA1BmG,EAAevG,SAAcuG,EAAiB,uBAElDZ,EACE,sBAAKT,UAAU,oBAAf,UACE,+CACA,qBAAKA,UAAU,6BAAf,SACGqB,YAIFZ,EAAkB,KAEzB,OACE,eAACI,EAAA,EAAD,WACE,iDACA,cAACC,EAAA,EAAD,UACGtB,IAEH,oBAAI0C,MAAO,CAACC,WAAY,QAAxB,6BACA,cAACrB,EAAA,EAAD,UACG0B,IAEH,cAAC1B,EAAA,EAAD,UACGV,IAEH,cAACU,EAAA,EAAD,UACGL,W,GAvI4BM,IAAMC,WCSvCkC,EAAa,eACbC,EAAa,eACbC,EAAW,aAsJFC,E,kDAjJb,WAAYjE,GAAQ,IAAD,8BACjB,cAAMA,IAYRmD,cAAgB,SAACe,GACf,EAAKC,SAAS,CAAClB,gBAAiBiB,KAdf,EAiBnBhB,gBAAmB,WACjB,EAAKiB,SAAS,CAAClB,gBAAiB,QAlBf,EAqBnBO,UAAY,SAAC/F,GACX,EAAK0G,SAAS,CAACd,YAAa5F,KAtBX,EAyBnB8F,YAAc,WACZ,EAAKY,SAAS,CAACd,YAAa,QA1BX,EA6BnBrB,gBAAkB,SAAChE,GACjB,EAAKmG,SAAS,CAACrC,kBAAmB9D,KA9BjB,EAiCnB+D,eAAiB,WACf,EAAKoC,SAAS,CAACrC,kBAAmB,QAlCjB,EAqCnBS,YAAc,SAAC6B,GACb,EAAKD,SAAS,CAACjC,cAAckC,KAtCZ,EAyCnB9B,WAAa,WACX,EAAK6B,SAAS,CAACjC,cAAe,QA1Cb,EA6CnBnB,WAAa,SAAC/C,GACZ,IAAIkC,EAAgB1B,KAAK6F,MAAM7F,KAAKC,UAAU,EAAK6F,MAAMpE,gBACzDA,EAAchC,KAAKF,GACnB,EAAKmG,SAAS,CAACjE,mBAhDE,EAoDnBY,aAAe,SAAC9C,GACd,IAAIuG,EAAuB,EAAKD,MAAMpE,cAAcrC,KAAI,SAAAsC,GAAE,OAAI3B,KAAKC,UAAU0B,MACzEqE,EAAahG,KAAKC,UAAUT,GAE5BkC,GADJqE,EAAuBA,EAAqBE,QAAO,SAAAC,GAAG,OAAIA,IAAMF,MACvB3G,KAAI,SAAA6G,GAAG,OAAIlG,KAAK6F,MAAMK,MAC/D,EAAKP,SAAS,CAACjE,mBAtDf,EAAKoE,MAAQ,CACXjE,SAAU,KACVH,cAAe,GACf4B,kBAAmB,KACnBI,cAAe,KACfe,gBAAiB,KACjBI,YAAa,MATE,E,0CA6DnB,WAAU,IAEJsB,EAFG,OAIP,OAAQ/I,KAAK0I,MAAMjE,UACjB,KAAKyD,EACHa,EACE,cAAC,EAAD,CACEzE,cAAetE,KAAK0I,MAAMpE,cAC1Ba,WAAYnF,KAAKmF,WACjBD,aAAclF,KAAKkF,eAGvB,MACF,KAAKiD,EACHY,EACE,cAAC,EAAD,CACE7C,kBAAmBlG,KAAK0I,MAAMxC,kBAC9BI,cAAetG,KAAK0I,MAAMpC,cAC1BF,gBAAiBpG,KAAKoG,gBACtBD,eAAgBnG,KAAKmG,eACrBQ,YAAa3G,KAAK2G,YAClBD,WAAY1G,KAAK0G,aAGrB,MACF,KAAK0B,EACHW,EACE,cAAC,EAAD,CACE1B,gBAAiBrH,KAAK0I,MAAMrB,gBAC5BI,YAAazH,KAAK0I,MAAMjB,YACxBF,cAAevH,KAAKuH,cACpBK,UAAW5H,KAAK4H,UAChBN,gBAAiBtH,KAAKsH,gBACtBK,YAAa3H,KAAK2H,cAGtB,MACF,QACEoB,EAAmB,KAGvB,OACE,eAAClD,EAAA,EAAD,CAAWb,UAAU,MAArB,UACE,oBAAIkC,MAAO,CACT8B,cAAe,OACf7B,WAAY,QAFd,uBAOA,eAACrB,EAAA,EAAD,WACE,cAAClB,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,oBACEG,UAAWhF,KAAK0I,MAAMjE,WAAayD,EAAe,4CAA8C,mBAChGjD,QAAS,WAAK,EAAKsD,SAAS,CAAC9D,SAASyD,KAFxC,4BAOF,cAACtD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,oBACEG,UAAWhF,KAAK0I,MAAMjE,WAAa0D,EAAe,4CAA8C,mBAChGlD,QAAS,WAAK,EAAKsD,SAAS,CAAC9D,SAAS0D,KAFxC,4BAOF,cAACvD,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,oBACEG,UAAWhF,KAAK0I,MAAMjE,WAAa2D,EAAa,4CAA8C,mBAC9FnD,QAAS,WAAK,EAAKsD,SAAS,CAAC9D,SAAS2D,KAFxC,6BAQJ,uBACCW,S,GA7IShD,IAAMC,WCNTiD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7e203fa3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export class CycleArr {\r\n  constructor(arr) {\r\n    this.arr = arr;\r\n  }\r\n\r\n  elAt = (index) => {\r\n    let newIndex;\r\n    if (index < 0) {\r\n      newIndex = -(index % this.arr.length)\r\n    } else if (index>=this.arr.length) {\r\n      newIndex = index %this.arr.length;\r\n    } else newIndex = index;\r\n    return this.arr[newIndex]\r\n  }\r\n\r\n  getArr = () => {\r\n    return this.arr;\r\n  }\r\n}\r\n\r\nexport const NOTES = [\r\n  {\r\n    NATURAL: \"A\",\r\n  },\r\n  {\r\n    SHARP: \"A♯\",\r\n    FLAT: \"B♭\"\r\n  },\r\n  {\r\n    NATURAL: \"B\",\r\n    FLAT: \"C♭\"\r\n  },\r\n  {\r\n    SHARP: \"B♯\",\r\n    NATURAL: \"C\",\r\n  },\r\n  {\r\n    SHARP: \"C♯\",\r\n    FLAT: \"D♭\"\r\n  },\r\n  {\r\n    NATURAL: \"D\",\r\n  },\r\n  {\r\n    SHARP: \"D♯\",\r\n    FLAT: \"E♭\"\r\n  },\r\n  {\r\n    NATURAL: \"E\",\r\n    FLAT: \"F♭\"\r\n  },\r\n  {\r\n    SHARP: \"E♯\",\r\n    NATURAL: \"F\",\r\n  },\r\n  {\r\n    SHARP: \"F♯\",\r\n    FLAT: \"G♭\"\r\n  },\r\n  {\r\n    NATURAL: \"G\",\r\n  },\r\n  {\r\n    SHARP: \"G♯\",\r\n    FLAT: \"A♭\"\r\n  }\r\n];\r\n\r\nexport const NOTE_CYCLE  = new CycleArr(NOTES);\r\n\r\nconst MAJOR_KEY = [0,2,4,5,7,9,11];\r\nconst MINOR_KEY = [0,2,3,5,7,8,10];\r\nconst BLUES_KEY = [0,3,5,6,7,10];\r\n\r\nexport const KEYS = {\r\n  MAJOR : {\r\n    name: \"Major\",\r\n    progression: [0,2,4,5,7,9,11]\r\n  }, \r\n  MINOR : {\r\n    name: \"Minor\",\r\n    progression: [0,2,3,5,7,8,10]\r\n  }, \r\n  BLUES : {\r\n    name: \"Blues\",\r\n    progression: [0,3,5,6,7,10]\r\n  }, \r\n}\r\n\r\nexport const CHORDS = {\r\n  FIFTH : {\r\n    name: \"5\",\r\n    progression: [0, 7] \r\n  },\r\n\r\n  MAJOR : {\r\n    name: \"maj\",\r\n    progression: [0, 4, 7] \r\n  },\r\n  \r\n  MINOR : {\r\n    name: \"min\",\r\n    progression: [0, 3, 7] \r\n  },\r\n  \r\n  AUG : {\r\n    name: \"aug\",\r\n    progression: [0, 4, 8]\r\n  },\r\n  \r\n  AUG_MAJ_SEVENTH : {\r\n    name: \"aug maj7\",\r\n    progression: [0, 4, 8, 11]\r\n  },\r\n  \r\n  AUG_MIN_SEVENTH : {\r\n    name: \"aug m7\",\r\n    progression: [0, 4, 8, 10]\r\n  },\r\n  \r\n  DIM : {\r\n    name: \"dim\",\r\n    progression: [0,3,6]\r\n  },\r\n  \r\n  DIM_SEVENTH : {\r\n    name: \"dim7\",\r\n    progression: [0,3,6,9]\r\n  },\r\n  \r\n  MINOR_SEVENTH_FLAT_FIVE : {\r\n    name: \"m7♭5\",\r\n    progression: [0,3,6,10]\r\n  },\r\n  \r\n  ADD_TWO : {\r\n    name: \"add2\",\r\n    progression: [0,4,7,14]\r\n  },\r\n  \r\n  SUS_FOUR : {\r\n    name: \"sus4\",\r\n    progression: [0,5,7]\r\n  },\r\n  \r\n  SUS_FOUR_ADD_SIX : {\r\n    name: \"sus4add6\",\r\n    progression: [0,5,7,9]\r\n  },\r\n  \r\n  SUS_FOUR_MIN_SIX : {\r\n    name: \"sus4m6\",\r\n    progression: [0,5,8]\r\n  },\r\n  \r\n  ADD_FOUR : {\r\n    name: \"add4\",\r\n    progression: [0,4,7,17]\r\n  },\r\n\r\n  MINOR_ADD_FOUR : {\r\n    name: \"madd4\",\r\n    progression: [0,3,7,17]\r\n  },\r\n  \r\n  SIX : {\r\n    name: \"6\",\r\n    progression: [0,4,7,9]\r\n  },\r\n  \r\n  SEVEN : {\r\n    name: \"7\",\r\n    progression: [0,4,7,10]\r\n  },\r\n  \r\n  MAJOR_SEVEN : {\r\n    name: \"maj7\",\r\n    progression: [0,4,7,11]\r\n  },\r\n  \r\n  MINOR_SEVEN : {\r\n    name: \"m7\",\r\n    progression: [0,3,7,10]\r\n  },\r\n  \r\n  SIX_SLASH_NINE : {\r\n    name: \"6/9\",\r\n    progression: [0,4,7,9,14]\r\n  },\r\n  \r\n  FLAT_NINTH : {\r\n    name: \"♭9\",\r\n    progression: [0,4,7,13]\r\n  },\r\n  \r\n  MINOR_FLAT_NINTH : {\r\n    name: \"m♭9\",\r\n    progression: [0,4,7,13]\r\n  }\r\n}\r\n\r\nexport const findRoot = (note) => {\r\n  return NOTES.find(n => {\r\n    if (n.FLAT === note || n.NATURAL === note || n.SHARP === note) return true;\r\n  })\r\n}\r\n\r\nexport const findRootIndex = (note) => {\r\n  NOTES.findIndex(n => {\r\n    if (n.FLAT === note || n.NATURAL === note || n.SHARP === note) return true;\r\n  })\r\n}\r\n\r\n// root is single note string\r\nexport const generateKey = (root, key) => {\r\n  let rootIndex = NOTES.findIndex(n => (n.FLAT === root || n.NATURAL=== root || n.SHARP === root))\r\n\r\n  let baseNotes = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"]\r\n  while (baseNotes[0] !== root[0]) {\r\n    baseNotes.push(baseNotes.shift())\r\n  }\r\n\r\n  let progression = key.progression.map(num => num+rootIndex);\r\n\r\n  return progression.map(note => {\r\n    let base = baseNotes.shift();\r\n    return correctNote(base, NOTE_CYCLE.elAt(note))\r\n  })\r\n\r\n}\r\n\r\n// takes root (String) and key (keyObj)\r\nexport const generateKeyInIntervals = (rootNoteStr, key) => {\r\n  let rootIndex = NOTES.findIndex(n => (n.FLAT === rootNoteStr || n.NATURAL=== rootNoteStr || n.SHARP === rootNoteStr))\r\n\r\n  return key.progression.map(num => ((num+rootIndex) % 12));\r\n}\r\n\r\n// takes root (String) and chord (chordObj)\r\nexport const generateChordInIntervals = (root, chord) => {\r\n  let rootIndex = NOTES.findIndex(n => (n.FLAT === root || n.NATURAL=== root || n.SHARP === root))\r\n\r\n  return chord.progression.map(num => ((num+rootIndex) % 12));\r\n}\r\n\r\n// interval chord to interval key comparison\r\nconst checkChordInKey = (chordArr, keyArr) => {\r\n  return chordArr.every(note => keyArr.includes(note));\r\n}\r\n\r\nexport const chordsInKey = (root, key) => {\r\n  let notes = generateKey(root, key);\r\n  let keyIntervals = generateKeyInIntervals(root, key);\r\n  \r\n  var chords = [];\r\n  // for each note, check each chord \r\n  for (let note of notes) {\r\n    for (let chord of Object.keys(CHORDS)) {\r\n      let chordIntervals = generateChordInIntervals(note, CHORDS[chord]);\r\n      if (checkChordInKey(chordIntervals, keyIntervals)) {\r\n        chords.push(`${note} ${CHORDS[chord].name}`)\r\n      }\r\n    }   \r\n  }\r\n  return chords;\r\n}\r\n\r\n// takes noteObj\r\nexport const noteInIntervals = (note) => {\r\n  let noteStrings = NOTES.map(n => JSON.stringify(n));\r\n  return noteStrings.findIndex(n => n===JSON.stringify(note));\r\n}\r\n\r\n// takes noteObj and returns note string (incl multiple spellings)\r\nexport const noteToString = (note) => {\r\n  let versions = []\r\n  if (note.SHARP) versions.push(note.SHARP);\r\n  if (note.NATURAL) versions.push(note.NATURAL);\r\n  if (note.FLAT) versions.push(note.FLAT);\r\n  return versions.join(\"/\");\r\n}\r\n\r\n// takes noteObj returns arr of stringified keys (ex: \"A min\")\r\nexport const compatibleKeysWithNotes = (notes) => {\r\n  let keys = [];\r\n\r\n  let noteIntervals = notes.map(note => noteInIntervals(note));\r\n\r\n  for (let root of NOTES) {\r\n    for (let key of Object.keys(KEYS)) {\r\n\r\n      let rootStr = noteToString(root).split(\"/\")[0];\r\n\r\n      let keyInterval = generateKeyInIntervals(rootStr, KEYS[key]);\r\n\r\n      if (noteIntervals.every(ni => keyInterval.includes(ni))) {\r\n        keys.push(`${noteToString(root)} ${KEYS[key].name}`);\r\n      }\r\n    }\r\n  }\r\n  return keys;\r\n}\r\n\r\nexport const correctNote = (baseNote, noteObj) => {\r\n  let keys = Object.keys(noteObj);\r\n  for (let key of keys) {\r\n    if (noteObj[key][0] === baseNote) return noteObj[key]\r\n  }\r\n  // else\r\n  return noteObj[keys[0]];\r\n}\r\n\r\n\r\nexport const getNoteIndex = (noteObj) => {\r\n  let stringifiedNoteObj = JSON.stringify(noteObj);\r\n\r\n  let stringifiedNotes = NOTES.map(n => JSON.stringify(n));\r\n\r\n  return (stringifiedNotes.findIndex(n=>n===stringifiedNoteObj))\r\n}\r\n\r\nexport const getKeyIntervals = (noteObj, keyObj) => {\r\n  let rootIndex = getNoteIndex(noteObj);\r\n\r\n  return keyObj.progression.map(i => {\r\n    return (i+rootIndex) % 12;\r\n  })\r\n}\r\n\r\nexport const getChordIntervals = (noteObj, chordObj) => {\r\n  let rootIndex = getNoteIndex(noteObj);\r\n\r\n  return chordObj.progression.map(i => {\r\n    return (i+rootIndex) % 12;\r\n  })\r\n}\r\n\r\nexport const getKeyNotes = (noteObj, keyObj) => {\r\n  let keyIntervals = getKeyIntervals(noteObj, keyObj);\r\n\r\n  return keyIntervals.map(ki => NOTES[ki]);\r\n}\r\n\r\nexport const getChordNotes = (noteObj, chordObj) => {\r\n  let chordIntervals = getChordIntervals(noteObj, chordObj);\r\n\r\n  return chordIntervals.map(ci => NOTES[ci]);\r\n}\r\n\r\nexport const chordIntervalInKeyInterval = (chordIntArr, keyIntArr) => {\r\n  return chordIntArr.every(cia => keyIntArr.includes(cia));\r\n}\r\n","import React from 'react';\r\nimport {NOTES, CHORDS, noteToString, compatibleKeysWithNotes, getNoteIndex, getChordIntervals} from '../scripts/MusicCalc.js';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\nimport '../App.css';\r\n\r\n\r\nclass SelectNotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);   \r\n  }\r\n\r\n  render() {\r\n    let selectedNoteStrings = this.props.selectedNotes.map(sn => JSON.stringify(sn));\r\n\r\n    let renderedNotes = NOTES.map(note => {\r\n\r\n      // determine if this note is selected\r\n      let selected = false;\r\n      if (selectedNoteStrings.includes(JSON.stringify(note))) selected = true;\r\n\r\n      // generate string for fake button\r\n      let noteStr = noteToString(note);\r\n\r\n      // generate className\r\n      let cName = \"note-select\";\r\n      if (selected) cName = cName + \" note-select-selected\"\r\n\r\n      return (\r\n        <Col xs={6} sm={4} md={3}>\r\n          <div \r\n            className={cName}\r\n            onClick={()=>{\r\n              if (selected) this.props.deselectNote(note);\r\n              else this.props.selectNote(note);\r\n            }}\r\n          >\r\n            {noteStr}\r\n          </div>\r\n        </Col>\r\n      )\r\n    })\r\n\r\n    // Generate displayed notes\r\n    let displayedNotes = null;\r\n    if (this.props.selectedNotes.length > 0) {\r\n\r\n      let noteStringEls = this.props.selectedNotes.map(sn => (\r\n        <div className=\"display-elements\">\r\n          {noteToString(sn)}\r\n        </div>));\r\n\r\n      displayedNotes = (\r\n        <div className=\"display-container\">\r\n          <h4>Notes</h4>\r\n          <div className=\"display-elements-container\">\r\n            {noteStringEls}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else displayedNotes = null;\r\n\r\n\r\n    // Generate displayed keys\r\n    let displayedKeys = null;\r\n    if (this.props.selectedNotes.length>0) {\r\n      let availableKeys = compatibleKeysWithNotes(this.props.selectedNotes).map(ak => {\r\n        return (\r\n          <div\r\n            className=\"display-elements\"\r\n          >\r\n            {ak}\r\n          </div>\r\n        )\r\n      })\r\n\r\n      if (availableKeys.length === 0) availableKeys=\"No matching keys\";\r\n\r\n      displayedKeys = (\r\n        <div className=\"display-container\">\r\n          <h4>Keys Containing Selected Notes</h4>\r\n          <div className=\"display-elements-container\">\r\n            {availableKeys}\r\n          </div>         \r\n        </div>\r\n      )\r\n    } else displayedKeys = null;\r\n\r\n    // Generate displayed chords\r\n    let displayedChords = null;\r\n    if (this.props.selectedNotes.length>0) {\r\n      let noteIntervals = this.props.selectedNotes.map(n => getNoteIndex(n));\r\n      let availableChords = [];\r\n\r\n      for (let n of NOTES) {\r\n        for (let ch_key of Object.keys(CHORDS)) {\r\n          let ch = CHORDS[ch_key];\r\n          if (noteIntervals.every(ni => getChordIntervals(n, ch).includes(ni))) {\r\n            availableChords.push(\r\n              <div className=\"displayed-key\">\r\n                {`${noteToString(n)} ${ch.name}`}\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      }\r\n      if (availableChords.length === 0) availableChords=\"No matching chords\"\r\n\r\n      displayedChords = (\r\n        <div className=\"display-container\">\r\n          <h4>Chords Containing Selected Notes</h4>\r\n          <div className=\"display-elements-container\">\r\n            {availableChords}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else displayedChords = null;\r\n\r\n    return(\r\n      <Container>\r\n        <Row>\r\n          {renderedNotes}\r\n        </Row>\r\n        <Row>\r\n          {displayedNotes}\r\n        </Row>\r\n        <Row>\r\n          {displayedKeys}\r\n        </Row>\r\n        <Row>\r\n          {displayedChords}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SelectNotes;","import {NOTES, KEYS, CHORDS, noteToString, getChordNotes, getChordIntervals, getKeyIntervals, chordIntervalInKeyInterval} from '../scripts/MusicCalc.js';\r\nimport React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nexport default class SelectChord extends React.Component {\r\n  constructor(props) {\r\n    super(props);   \r\n  }\r\n\r\n  render() {\r\n\r\n    // Note buttons to select\r\n    let renderedNotes = NOTES.map(note => {\r\n\r\n      // determine if this note is selected\r\n      let selected = false;\r\n      if (JSON.stringify(this.props.selectedChordRoot) === JSON.stringify(note)) selected = true;\r\n\r\n\r\n      // generate string for fake button\r\n      let noteStr = noteToString(note);\r\n\r\n      // generate className\r\n      let cName = \"note-select\";\r\n      if (selected) cName = cName + \" note-select-selected\"\r\n\r\n      return (\r\n        <Col xs={6} sm={4} md={3}>\r\n          <div \r\n            className={cName}\r\n            onClick={()=>{\r\n              if (selected) this.props.clearChordRoot();\r\n              else this.props.selectChordRoot(note);\r\n            }}\r\n          >\r\n            {noteStr}\r\n          </div>\r\n        </Col>\r\n      )\r\n    })\r\n\r\n    let chordArr = Object.keys(CHORDS).map(ch => CHORDS[ch]);\r\n\r\n    // Chord buttons to select\r\n    let renderedChords = chordArr.map(ch => {\r\n\r\n      // determine if this note is selected\r\n      let selected = false;\r\n      if (JSON.stringify(this.props.selectedChord) === JSON.stringify(ch)) selected = true;\r\n\r\n      // generate className\r\n      let cName = \"note-select\";\r\n      if (selected) cName = cName + \" note-select-selected\"\r\n\r\n      // get chord string to display\r\n      let chordStr = ch.name;\r\n\r\n      return (\r\n        <Col xs={6} sm={4} md={3}>\r\n          <div \r\n            className={cName}\r\n            onClick={()=>{\r\n              if (selected){ \r\n                console.log(ch);\r\n                this.props.clearChord();}\r\n              else {\r\n                console.log(ch)\r\n                this.props.selectChord(ch);\r\n              }\r\n            }}\r\n          >\r\n            {chordStr}\r\n          </div>\r\n        </Col>\r\n      )\r\n    })\r\n\r\n    // Generate displayed notes\r\n    let displayedNotes = null;\r\n    if  (this.props.selectedChordRoot && this.props.selectedChord) {\r\n      let chordNotes = getChordNotes(this.props.selectedChordRoot, this.props.selectedChord)\r\n      .map(cn => (\r\n        <div className=\"displayed-elements\">\r\n          {noteToString(cn)}\r\n        </div>\r\n      ));\r\n\r\n      displayedNotes = (\r\n        <div className=\"display-container\">\r\n          <h4>Notes In Chord</h4>\r\n          <div className=\"display-elements-container\">\r\n            {chordNotes}\r\n          </div>         \r\n        </div>\r\n      )\r\n\r\n    } else displayedNotes = null;\r\n\r\n\r\n    // Generate displayed keys\r\n    let displayedKeys = null;\r\n    if (this.props.selectedChordRoot && this.props.selectedChord) {\r\n\r\n      let availableKeys = [];\r\n      let chordInterval = getChordIntervals(this.props.selectedChordRoot, this.props.selectedChord);\r\n\r\n      for (let key_in of Object.keys(KEYS)) {\r\n        let k = KEYS[key_in];\r\n        for (let n of NOTES) {\r\n          let keyInterval = getKeyIntervals(n, k);\r\n\r\n          if (chordIntervalInKeyInterval(chordInterval, keyInterval)) {\r\n            availableKeys.push(\r\n              <div className=\"display-elements\">\r\n                {`${noteToString(n)} ${k.name}`}\r\n              </div>\r\n            )\r\n          }\r\n        }\r\n      }\r\n\r\n      if (availableKeys.length === 0) availableKeys = \"No available keys\";\r\n\r\n      displayedKeys = (\r\n        <div className=\"display-container\">\r\n          <h4>Keys Containing Chord</h4>\r\n          <div className=\"display-elements-container\">\r\n            {availableKeys}\r\n          </div>         \r\n        </div>\r\n      )\r\n\r\n    } else displayedKeys = null;\r\n\r\n    return(\r\n      <Container>\r\n        {/* Root */}\r\n        <h4>Select Chord Root</h4>\r\n        <Row>\r\n          {renderedNotes}\r\n        </Row>\r\n        {/* Chord Type */}\r\n        <h4 style={{paddingTop:\"20px\"}}>Select Chord Type</h4>\r\n        <Row>\r\n          {renderedChords}\r\n        </Row>\r\n        <Row>\r\n          {displayedNotes}\r\n        </Row>\r\n        <Row>\r\n          {displayedKeys}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}","import {NOTES, KEYS, CHORDS, noteToString, getKeyIntervals, getChordIntervals, chordIntervalInKeyInterval, getKeyNotes} from '../scripts/MusicCalc.js';\r\nimport React from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nexport default class SelectKey extends React.Component {\r\n  constructor(props) {\r\n    super(props);   \r\n  }\r\n\r\n  render() {\r\n    let renderedNotes = NOTES.map(note => {\r\n      let selected = false;\r\n      if (JSON.stringify(this.props.selectedKeyRoot)=== JSON.stringify(note)) selected = true;\r\n\r\n      let noteStr = noteToString(note);\r\n\r\n      let cName = \"note-select\";\r\n\r\n      if (selected) cName = cName + \" note-select-selected\";\r\n\r\n      return (\r\n        <Col xs={6} sm={4} md={3}>\r\n          <div \r\n            className={cName}\r\n            onClick={()=>{\r\n              if (selected) this.props.deselectKeyRoot();\r\n              else this.props.selectKeyRoot(note);\r\n            }}\r\n          >\r\n            {noteStr}\r\n          </div>\r\n        </Col>\r\n      )\r\n    })\r\n\r\n    let renderedKeys = Object.keys(KEYS).map(k => KEYS[k])\r\n    .map(k => {\r\n      let selected = false;\r\n      if (JSON.stringify(this.props.selectedKey) === JSON.stringify(k)) selected = true;\r\n\r\n      let cName = \"note-select\"\r\n      if (selected) cName = cName + \" note-select-selected\"\r\n\r\n      let keyStr = k.name;\r\n\r\n      return (\r\n        <Col xs={6} sm={4} md={3}>\r\n          <div \r\n            className={cName}\r\n            onClick={()=>{\r\n              if (selected){ \r\n                this.props.deselectKey();}\r\n              else {\r\n                this.props.selectKey(k);\r\n              }\r\n            }}\r\n          >\r\n            {keyStr}\r\n          </div>\r\n        </Col>\r\n      )\r\n    });\r\n\r\n    let keyIntervals = [];\r\n\r\n    if (this.props.selectedKeyRoot && this.props.selectedKey) {\r\n      keyIntervals = getKeyIntervals(this.props.selectedKeyRoot, this.props.selectedKey)\r\n    }\r\n    \r\n\r\n    // Generate displayed notes\r\n    let displayedNotes = null;\r\n    if (this.props.selectedKey && this.props.selectedKeyRoot) {\r\n\r\n      let noteStrs = getKeyNotes(this.props.selectedKeyRoot, this.props.selectedKey)\r\n      .map(n => (\r\n        <div className=\"display-elements\">\r\n          {noteToString(n)}\r\n        </div>)\r\n      );\r\n\r\n      displayedNotes = (\r\n        <div className=\"display-container\">\r\n          <h4>Notes In Key</h4>\r\n          <div className=\"display-elements-container\">\r\n            {noteStrs}\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    } else displayedNotes = null;\r\n\r\n\r\n    // Generate displayed chords\r\n    let displayedChords = null;\r\n    if (this.props.selectedKeyRoot && this.props.selectedKey) {\r\n      let renderedChords = [];\r\n      NOTES.forEach(n => {\r\n        Object.keys(CHORDS).forEach(ch_key => {\r\n          let ch = CHORDS[ch_key]\r\n        \r\n          let chordIntervals = getChordIntervals(n, ch);\r\n\r\n          if (chordIntervalInKeyInterval(chordIntervals, keyIntervals)) {\r\n            renderedChords.push(\r\n              <div className=\"display-elements\">\r\n                {`${noteToString(n)} ${ch.name}`}\r\n              </div>\r\n            )\r\n          }\r\n        })\r\n      })\r\n\r\n      if (renderedChords.length === 0) renderedChords = \"No available chords\";\r\n\r\n      displayedChords = (\r\n        <div className=\"display-container\">\r\n          <h4>Chords In Key</h4>\r\n          <div className=\"display-elements-container\">\r\n            {renderedChords}\r\n          </div>\r\n        </div>\r\n      )\r\n    } else displayedChords = null;\r\n\r\n    return(\r\n      <Container>\r\n        <h4>Select Key Root</h4>\r\n        <Row>\r\n          {renderedNotes}\r\n        </Row>\r\n        <h4 style={{paddingTop: \"20px\"}}>Select Key Type</h4>\r\n        <Row>\r\n          {renderedKeys}\r\n        </Row>\r\n        <Row>\r\n          {displayedNotes}\r\n        </Row>\r\n        <Row>\r\n          {displayedChords}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React from 'react';\nimport {Row, Col, Container} from 'react-bootstrap'\n\n\nimport {NOTES, KEYS, CHORDS, generateKey, generateKeyInIntervals, noteToString, getNoteIndex, getKeyIntervals, getChordIntervals, getKeyNotes, getChordNotes, chordIntervalInKeyInterval} from './scripts/MusicCalc.js';\n\nimport SelectNotes from './components/SelectNotes.js';\nimport SelectChord from './components/SelectChord.js';\nimport SelectKey from './components/SelectKey.js';\n\nconst SELECT_NOTES=\"SELECT NOTES\"\nconst SELECT_CHORD=\"SELECT CHORD\"\nconst SELECT_KEY=\"SELECT KEY\"\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selected: null,\n      selectedNotes: [],\n      selectedChordRoot: null,\n      selectedChord: null,\n      selectedKeyRoot: null,\n      selectedKey: null\n    }\n  }\n\n  selectKeyRoot = (keyRoot) => {\n    this.setState({selectedKeyRoot: keyRoot});\n  }\n\n  deselectKeyRoot  = () => {\n    this.setState({selectedKeyRoot: null});\n  }\n\n  selectKey = (key) => {\n    this.setState({selectedKey: key});\n  }\n\n  deselectKey = () => {\n    this.setState({selectedKey: null});\n  }\n\n  selectChordRoot = (note) => {\n    this.setState({selectedChordRoot: note});\n  }\n\n  clearChordRoot = () => {\n    this.setState({selectedChordRoot: null})\n  }\n\n  selectChord = (chord) => {\n    this.setState({selectedChord:chord});\n  }\n\n  clearChord = () => {\n    this.setState({selectedChord: null})\n  }\n\n  selectNote = (note) => {\n    let selectedNotes = JSON.parse(JSON.stringify(this.state.selectedNotes));\n    selectedNotes.push(note);\n    this.setState({selectedNotes})\n  }\n\n\n  deselectNote = (note) => {\n    let selectedNotesStrings = this.state.selectedNotes.map(sn => JSON.stringify(sn));\n    let noteString = JSON.stringify(note);    \n    selectedNotesStrings = selectedNotesStrings.filter(sns => sns!==noteString);\n    let selectedNotes = selectedNotesStrings.map(sns => JSON.parse(sns));\n    this.setState({selectedNotes});\n  }\n\n\n  render() {\n\n    let selected_component;\n\n    switch (this.state.selected) {\n      case SELECT_NOTES:\n        selected_component=(\n          <SelectNotes \n            selectedNotes={this.state.selectedNotes}\n            selectNote={this.selectNote}\n            deselectNote={this.deselectNote}\n          />\n        );\n        break;\n      case SELECT_CHORD:\n        selected_component=(\n          <SelectChord \n            selectedChordRoot={this.state.selectedChordRoot}\n            selectedChord={this.state.selectedChord}\n            selectChordRoot={this.selectChordRoot}\n            clearChordRoot={this.clearChordRoot}\n            selectChord={this.selectChord}\n            clearChord={this.clearChord}\n          />\n        );\n        break;\n      case SELECT_KEY:\n        selected_component=(\n          <SelectKey \n            selectedKeyRoot={this.state.selectedKeyRoot}\n            selectedKey={this.state.selectedKey}\n            selectKeyRoot={this.selectKeyRoot}\n            selectKey={this.selectKey}\n            deselectKeyRoot={this.deselectKeyRoot}\n            deselectKey={this.deselectKey}\n          />\n        );\n        break;\n      default:\n        selected_component=null;\n    }\n\n    return (\n      <Container className=\"App\">\n        <h1 style={{\n          paddingBottom: \"20px\",\n          paddingTop: \"15px\"\n          }}\n        >\n          Keyfinder\n        </h1>\n        <Row>\n          <Col xs={4}>\n            <h4 \n              className={this.state.selected === SELECT_NOTES ? \"seletion-header selection-header-selected\" : \"selection-header\"}\n              onClick={()=>{this.setState({selected:SELECT_NOTES})}}\n            >\n              Select Notes\n            </h4>\n          </Col>\n          <Col xs={4}>\n            <h4\n              className={this.state.selected === SELECT_CHORD ? \"seletion-header selection-header-selected\" : \"selection-header\"}\n              onClick={()=>{this.setState({selected:SELECT_CHORD})}}\n            >\n              Select Chord\n            </h4>\n          </Col>\n          <Col xs={4}>\n            <h4 \n              className={this.state.selected === SELECT_KEY ? \"seletion-header selection-header-selected\" : \"selection-header\"}\n              onClick={()=>{this.setState({selected:SELECT_KEY})}}\n            >\n              Select Key\n            </h4>\n          </Col>\n        </Row>\n        <hr/>\n        {selected_component}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}